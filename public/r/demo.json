{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "demo",
  "type": "registry:block",
  "description": "A demo of this library",
  "dependencies": [
    "recharts",
    "@tanstack/react-table",
    "date-fns",
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "card",
    "chart",
    "calendar",
    "input",
    "label",
    "checkbox",
    "radio-group",
    "textarea",
    "avatar",
    "command",
    "dialog",
    "tooltip",
    "dropdown-menu",
    "table",
    "popover",
    "select"
  ],
  "files": [
    {
      "path": "registry/default/blocks/demo/index.tsx",
      "content": "import { CardsActivityGoal } from \"@/registry/default/blocks/demo/activity-goal\"\nimport { CardsCalendar } from \"@/registry/default/blocks/demo/calendar\"\nimport { CardsChat } from \"@/registry/default/blocks/demo/chat\"\nimport { CardsCookieSettings } from \"@/registry/default/blocks/demo/cookie-settings\"\nimport { CardsCreateAccount } from \"@/registry/default/blocks/demo/create-account\"\nimport { CardsExerciseMinutes } from \"@/registry/default/blocks/demo/exercise-minutes\"\nimport { CardsForms } from \"@/registry/default/blocks/demo/forms\"\nimport { CardsPayments } from \"@/registry/default/blocks/demo/payments\"\nimport { CardsReportIssue } from \"@/registry/default/blocks/demo/report-issue\"\nimport { CardsShare } from \"@/registry/default/blocks/demo/share\"\nimport { CardsStats } from \"@/registry/default/blocks/demo/stats\"\nimport { CardsTeamMembers } from \"@/registry/default/blocks/demo/team-members\"\n\nexport function Demo() {\n  return (\n    <div className=\"md:grids-col-2 grid **:data-[slot=card]:shadow-none md:gap-4 lg:grid-cols-10 xl:grid-cols-11\">\n      <div className=\"grid gap-4 lg:col-span-4 xl:col-span-6\">\n        <CardsStats />\n        <div className=\"grid gap-1 sm:grid-cols-[auto_1fr] md:hidden\">\n          <CardsCalendar />\n          <div className=\"pt-3 sm:pt-0 sm:pl-2 xl:pl-4\">\n            <CardsActivityGoal />\n          </div>\n          <div className=\"pt-3 sm:col-span-2 xl:pt-4\">\n            <CardsExerciseMinutes />\n          </div>\n        </div>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-1 xl:grid-cols-2\">\n          <div className=\"flex flex-col gap-4\">\n            <CardsForms />\n            <CardsTeamMembers />\n            <CardsCookieSettings />\n          </div>\n          <div className=\"flex flex-col gap-4\">\n            <CardsCreateAccount />\n            <CardsChat />\n            <div className=\"hidden xl:block\">\n              <CardsReportIssue />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-4 lg:col-span-6 xl:col-span-5\">\n        <div className=\"hidden gap-1 sm:grid-cols-[auto_1fr] md:grid\">\n          <CardsCalendar />\n          <div className=\"pt-3 sm:pt-0 sm:pl-2 xl:pl-3\">\n            <CardsActivityGoal />\n          </div>\n          <div className=\"pt-3 sm:col-span-2 xl:pt-3\">\n            <CardsExerciseMinutes />\n          </div>\n        </div>\n        <div className=\"hidden md:block\">\n          <CardsPayments />\n        </div>\n        <CardsShare />\n        <div className=\"xl:hidden\">\n          <CardsReportIssue />\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:block",
      "target": "components/demo/index.tsx"
    },
    {
      "path": "registry/default/blocks/demo/activity-goal.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { MinusIcon, PlusIcon } from \"lucide-react\"\nimport { Bar, BarChart } from \"recharts\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { ChartConfig, ChartContainer } from \"@/registry/default/ui/chart\"\n\nconst data = [\n  {\n    goal: 400,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 239,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 349,\n  },\n]\n\nconst chartConfig = {\n  goal: {\n    label: \"Goal\",\n    color: \"var(--primary)\",\n  },\n} satisfies ChartConfig\n\nexport function CardsActivityGoal() {\n  const [goal, setGoal] = React.useState(350)\n\n  function onClick(adjustment: number) {\n    setGoal(Math.max(200, Math.min(400, goal + adjustment)))\n  }\n\n  return (\n    <Card className=\"h-full gap-5\">\n      <CardHeader>\n        <CardTitle>Move Goal</CardTitle>\n        <CardDescription>Set your daily activity goal.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex flex-1 flex-col\">\n        <div className=\"flex items-center justify-center gap-4\">\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"size-7 rounded-full\"\n            onClick={() => onClick(-10)}\n            disabled={goal <= 200}\n          >\n            <MinusIcon />\n            <span className=\"sr-only\">Decrease</span>\n          </Button>\n          <div className=\"text-center\">\n            <div className=\"text-4xl font-bold tracking-tighter tabular-nums\">\n              {goal}\n            </div>\n            <div className=\"text-muted-foreground text-xs uppercase\">\n              Calories/day\n            </div>\n          </div>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"size-7 rounded-full\"\n            onClick={() => onClick(10)}\n            disabled={goal >= 400}\n          >\n            <PlusIcon />\n            <span className=\"sr-only\">Increase</span>\n          </Button>\n        </div>\n        <div className=\"flex-1\">\n          <ChartContainer\n            config={chartConfig}\n            className=\"aspect-auto h-full w-full\"\n          >\n            <BarChart data={data}>\n              <Bar dataKey=\"goal\" radius={4} fill=\"var(--color-goal)\" />\n            </BarChart>\n          </ChartContainer>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"w-full\" variant=\"secondary\">\n          Set Goal\n        </Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/activity-goal.tsx"
    },
    {
      "path": "registry/default/blocks/demo/calendar.tsx",
      "content": "\"use client\"\n\nimport { addDays } from \"date-fns\"\n\nimport { Calendar } from \"@/registry/default/ui/calendar\"\nimport { Card, CardContent } from \"@/registry/default/ui/card\"\n\nconst start = new Date(2025, 5, 5)\n\nexport function CardsCalendar() {\n  return (\n    <Card className=\"hidden max-w-[260px] p-0 sm:flex\">\n      <CardContent className=\"p-0\">\n        <Calendar\n          numberOfMonths={1}\n          mode=\"range\"\n          defaultMonth={start}\n          selected={{\n            from: start,\n            to: addDays(start, 8),\n          }}\n        />\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/calendar.tsx"
    },
    {
      "path": "registry/default/blocks/demo/chat.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ArrowUpIcon, CheckIcon, PlusIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/default/ui/avatar\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n} from \"@/registry/default/ui/card\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/registry/default/ui/command\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/registry/default/ui/dialog\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/registry/default/ui/tooltip\"\n\nconst users = [\n  {\n    name: \"Olivia Martin\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/01.png\",\n  },\n  {\n    name: \"Isabella Nguyen\",\n    email: \"isabella.nguyen@email.com\",\n    avatar: \"/avatars/03.png\",\n  },\n  {\n    name: \"Emma Wilson\",\n    email: \"emma@example.com\",\n    avatar: \"/avatars/05.png\",\n  },\n  {\n    name: \"Jackson Lee\",\n    email: \"lee@example.com\",\n    avatar: \"/avatars/02.png\",\n  },\n  {\n    name: \"William Kim\",\n    email: \"will@email.com\",\n    avatar: \"/avatars/04.png\",\n  },\n] as const\n\ntype User = (typeof users)[number]\n\nexport function CardsChat() {\n  const [open, setOpen] = React.useState(false)\n  const [selectedUsers, setSelectedUsers] = React.useState<User[]>([])\n\n  const [messages, setMessages] = React.useState([\n    {\n      role: \"agent\",\n      content: \"Hi, how can I help you today?\",\n    },\n    {\n      role: \"user\",\n      content: \"Hey, I'm having trouble with my account.\",\n    },\n    {\n      role: \"agent\",\n      content: \"What seems to be the problem?\",\n    },\n    {\n      role: \"user\",\n      content: \"I can't log in.\",\n    },\n  ])\n  const [input, setInput] = React.useState(\"\")\n  const inputLength = input.trim().length\n\n  return (\n    <>\n      <Card>\n        <CardHeader className=\"flex flex-row items-center\">\n          <div className=\"flex items-center gap-4\">\n            <Avatar className=\"border\">\n              <AvatarImage src=\"/avatars/01.png\" alt=\"Image\" />\n              <AvatarFallback>S</AvatarFallback>\n            </Avatar>\n            <div className=\"flex flex-col gap-0.5\">\n              <p className=\"text-sm leading-none font-medium\">Sofia Davis</p>\n              <p className=\"text-muted-foreground text-xs\">m@example.com</p>\n            </div>\n          </div>\n          <TooltipProvider delayDuration={0}>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button\n                  size=\"icon\"\n                  variant=\"secondary\"\n                  className=\"ml-auto size-8 rounded-full\"\n                  onClick={() => setOpen(true)}\n                >\n                  <PlusIcon />\n                  <span className=\"sr-only\">New message</span>\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent sideOffset={10}>New message</TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col gap-4\">\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={cn(\n                  \"flex w-max max-w-[75%] flex-col gap-2 rounded-lg px-3 py-2 text-sm\",\n                  message.role === \"user\"\n                    ? \"bg-primary text-primary-foreground ml-auto\"\n                    : \"bg-muted\"\n                )}\n              >\n                {message.content}\n              </div>\n            ))}\n          </div>\n        </CardContent>\n        <CardFooter>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault()\n              if (inputLength === 0) return\n              setMessages([\n                ...messages,\n                {\n                  role: \"user\",\n                  content: input,\n                },\n              ])\n              setInput(\"\")\n            }}\n            className=\"relative w-full\"\n          >\n            <Input\n              id=\"message\"\n              placeholder=\"Type your message...\"\n              className=\"flex-1 pr-10\"\n              autoComplete=\"off\"\n              value={input}\n              onChange={(event) => setInput(event.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              size=\"icon\"\n              className=\"absolute top-1/2 right-2 size-6 -translate-y-1/2 rounded-full\"\n              disabled={inputLength === 0}\n            >\n              <ArrowUpIcon className=\"size-3.5\" />\n              <span className=\"sr-only\">Send</span>\n            </Button>\n          </form>\n        </CardFooter>\n      </Card>\n      <Dialog open={open} onOpenChange={setOpen}>\n        <DialogContent className=\"gap-0 p-0 outline-none\">\n          <DialogHeader className=\"px-4 pt-5 pb-4\">\n            <DialogTitle>New message</DialogTitle>\n            <DialogDescription>\n              Invite a user to this thread. This will create a new group\n              message.\n            </DialogDescription>\n          </DialogHeader>\n          <Command className=\"overflow-hidden rounded-t-none border-t bg-transparent\">\n            <CommandInput placeholder=\"Search user...\" />\n            <CommandList>\n              <CommandEmpty>No users found.</CommandEmpty>\n              <CommandGroup>\n                {users.map((user) => (\n                  <CommandItem\n                    key={user.email}\n                    data-active={selectedUsers.includes(user)}\n                    className=\"data-[active=true]:opacity-50\"\n                    onSelect={() => {\n                      if (selectedUsers.includes(user)) {\n                        return setSelectedUsers(\n                          selectedUsers.filter(\n                            (selectedUser) => selectedUser !== user\n                          )\n                        )\n                      }\n\n                      return setSelectedUsers(\n                        [...users].filter((u) =>\n                          [...selectedUsers, user].includes(u)\n                        )\n                      )\n                    }}\n                  >\n                    <Avatar className=\"border\">\n                      <AvatarImage src={user.avatar} alt=\"Image\" />\n                      <AvatarFallback>{user.name[0]}</AvatarFallback>\n                    </Avatar>\n                    <div className=\"ml-2\">\n                      <p className=\"text-sm leading-none font-medium\">\n                        {user.name}\n                      </p>\n                      <p className=\"text-muted-foreground text-sm\">\n                        {user.email}\n                      </p>\n                    </div>\n                    {selectedUsers.includes(user) ? (\n                      <CheckIcon className=\"text-primary ml-auto flex size-4\" />\n                    ) : null}\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            </CommandList>\n          </Command>\n          <DialogFooter className=\"flex items-center border-t p-4 sm:justify-between\">\n            {selectedUsers.length > 0 ? (\n              <div className=\"flex -space-x-2 overflow-hidden\">\n                {selectedUsers.map((user) => (\n                  <Avatar key={user.email} className=\"inline-block border\">\n                    <AvatarImage src={user.avatar} />\n                    <AvatarFallback>{user.name[0]}</AvatarFallback>\n                  </Avatar>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-muted-foreground text-sm\">\n                Select users to add to this thread.\n              </p>\n            )}\n            <Button\n              disabled={selectedUsers.length < 2}\n              size=\"sm\"\n              onClick={() => {\n                setOpen(false)\n              }}\n            >\n              Continue\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/chat.tsx"
    },
    {
      "path": "registry/default/blocks/demo/cookie-settings.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport { Switch } from \"@/registry/default/ui/switch\"\n\nexport function CardsCookieSettings() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Cookie Settings</CardTitle>\n        <CardDescription>Manage your cookie settings here.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"grid gap-6\">\n        <div className=\"flex items-center justify-between gap-4\">\n          <Label htmlFor=\"necessary\" className=\"flex flex-col items-start\">\n            <span>Strictly Necessary</span>\n            <span className=\"text-muted-foreground leading-snug font-normal\">\n              These cookies are essential in order to use the website and use\n              its features.\n            </span>\n          </Label>\n          <Switch id=\"necessary\" defaultChecked aria-label=\"Necessary\" />\n        </div>\n        <div className=\"flex items-center justify-between gap-4\">\n          <Label htmlFor=\"functional\" className=\"flex flex-col items-start\">\n            <span>Functional Cookies</span>\n            <span className=\"text-muted-foreground leading-snug font-normal\">\n              These cookies allow the website to provide personalized\n              functionality.\n            </span>\n          </Label>\n          <Switch id=\"functional\" aria-label=\"Functional\" />\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button variant=\"outline\" className=\"w-full\">\n          Save preferences\n        </Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/cookie-settings.tsx"
    },
    {
      "path": "registry/default/blocks/demo/create-account.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\n\nexport function CardsCreateAccount() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-2xl\">Create an account</CardTitle>\n        <CardDescription>\n          Enter your email below to create your account\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex flex-col gap-4\">\n        <div className=\"grid grid-cols-2 gap-6\">\n          <Button variant=\"outline\">\n            <svg viewBox=\"0 0 438.549 438.549\">\n              <path\n                fill=\"currentColor\"\n                d=\"M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8-33.598-19.607-70.277-29.408-110.063-29.408-39.781 0-76.472 9.804-110.063 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.854 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.419-1.996 2.475-2.282 3.711-5.14 3.711-8.562 0-.571-.049-5.708-.144-15.417a2549.81 2549.81 0 01-.144-25.406l-6.567 1.136c-4.187.767-9.469 1.092-15.846 1-6.374-.089-12.991-.757-19.842-1.999-6.854-1.231-13.229-4.086-19.13-8.559-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-.951-2.568-2.098-3.711-3.429-1.142-1.331-1.997-2.663-2.568-3.997-.572-1.335-.098-2.43 1.427-3.289 1.525-.859 4.281-1.276 8.28-1.276l5.708.853c3.807.763 8.516 3.042 14.133 6.851 5.614 3.806 10.229 8.754 13.846 14.842 4.38 7.806 9.657 13.754 15.846 17.847 6.184 4.093 12.419 6.136 18.699 6.136 6.28 0 11.704-.476 16.274-1.423 4.565-.952 8.848-2.383 12.847-4.285 1.713-12.758 6.377-22.559 13.988-29.41-10.848-1.14-20.601-2.857-29.264-5.14-8.658-2.286-17.605-5.996-26.835-11.14-9.235-5.137-16.896-11.516-22.985-19.126-6.09-7.614-11.088-17.61-14.987-29.979-3.901-12.374-5.852-26.648-5.852-42.826 0-23.035 7.52-42.637 22.557-58.817-7.044-17.318-6.379-36.732 1.997-58.24 5.52-1.715 13.706-.428 24.554 3.853 10.85 4.283 18.794 7.952 23.84 10.994 5.046 3.041 9.089 5.618 12.135 7.708 17.705-4.947 35.976-7.421 54.818-7.421s37.117 2.474 54.823 7.421l10.849-6.849c7.419-4.57 16.18-8.758 26.262-12.565 10.088-3.805 17.802-4.853 23.134-3.138 8.562 21.509 9.325 40.922 2.279 58.24 15.036 16.18 22.559 35.787 22.559 58.817 0 16.178-1.958 30.497-5.853 42.966-3.9 12.471-8.941 22.457-15.125 29.979-6.191 7.521-13.901 13.85-23.131 18.986-9.232 5.14-18.182 8.85-26.84 11.136-8.662 2.286-18.415 4.004-29.263 5.146 9.894 8.562 14.842 22.077 14.842 40.539v60.237c0 3.422 1.19 6.279 3.572 8.562 2.379 2.279 6.136 2.95 11.276 1.995 44.163-14.653 80.185-41.062 108.068-79.226 27.88-38.161 41.825-81.126 41.825-128.906-.01-39.771-9.818-76.454-29.414-110.049z\"\n              ></path>\n            </svg>\n            GitHub\n          </Button>\n          <Button variant=\"outline\">\n            <svg role=\"img\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"currentColor\"\n                d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n              />\n            </svg>\n            Google\n          </Button>\n        </div>\n        <div className=\"relative\">\n          <div className=\"absolute inset-0 flex items-center\">\n            <span className=\"w-full border-t\" />\n          </div>\n          <div className=\"relative flex justify-center text-xs uppercase\">\n            <span className=\"bg-card text-muted-foreground px-2\">\n              Or continue with\n            </span>\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-3\">\n          <Label htmlFor=\"email-create-account\">Email</Label>\n          <Input\n            id=\"email-create-account\"\n            type=\"email\"\n            placeholder=\"m@example.com\"\n          />\n        </div>\n        <div className=\"flex flex-col gap-3\">\n          <Label htmlFor=\"password-create-account\">Password</Label>\n          <Input id=\"password-create-account\" type=\"password\" />\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"w-full\">Create account</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/create-account.tsx"
    },
    {
      "path": "registry/default/blocks/demo/exercise-minutes.tsx",
      "content": "\"use client\"\n\nimport { CartesianGrid, Line, LineChart, XAxis } from \"recharts\"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/registry/default/ui/chart\"\n\nconst data = [\n  {\n    average: 400,\n    today: 240,\n    day: \"Monday\",\n  },\n  {\n    average: 300,\n    today: 139,\n    day: \"Tuesday\",\n  },\n  {\n    average: 200,\n    today: 980,\n    day: \"Wednesday\",\n  },\n  {\n    average: 278,\n    today: 390,\n    day: \"Thursday\",\n  },\n  {\n    average: 189,\n    today: 480,\n    day: \"Friday\",\n  },\n  {\n    average: 239,\n    today: 380,\n    day: \"Saturday\",\n  },\n  {\n    average: 349,\n    today: 430,\n    day: \"Sunday\",\n  },\n]\n\nconst chartConfig = {\n  today: {\n    label: \"Today\",\n    color: \"var(--primary)\",\n  },\n  average: {\n    label: \"Average\",\n    color: \"var(--primary)\",\n  },\n} satisfies ChartConfig\n\nexport function CardsExerciseMinutes() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Exercise Minutes</CardTitle>\n        <CardDescription>\n          Your exercise minutes are ahead of where you normally are.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig} className=\"w-full md:h-[200px]\">\n          <LineChart\n            accessibilityLayer\n            data={data}\n            margin={{\n              top: 5,\n              right: 10,\n              left: 16,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"day\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"today\"\n              strokeWidth={2}\n              stroke=\"var(--color-today)\"\n              dot={{\n                fill: \"var(--color-today)\",\n              }}\n              activeDot={{\n                r: 5,\n              }}\n            />\n            <Line\n              type=\"monotone\"\n              strokeWidth={2}\n              dataKey=\"average\"\n              stroke=\"var(--color-average)\"\n              strokeOpacity={0.5}\n              dot={{\n                fill: \"var(--color-average)\",\n                opacity: 0.5,\n              }}\n              activeDot={{\n                r: 5,\n              }}\n            />\n            <ChartTooltip content={<ChartTooltipContent />} />\n          </LineChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/exercise-minutes.tsx"
    },
    {
      "path": "registry/default/blocks/demo/forms.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport { RadioGroup, RadioGroupItem } from \"@/registry/default/ui/radio-group\"\nimport { Textarea } from \"@/registry/default/ui/textarea\"\n\nconst plans = [\n  {\n    id: \"starter\",\n    name: \"Starter Plan\",\n    description: \"Perfect for small businesses.\",\n    price: \"$10\",\n  },\n  {\n    id: \"pro\",\n    name: \"Pro Plan\",\n    description: \"More features and storage.\",\n    price: \"$20\",\n  },\n] as const\n\nexport function CardsForms() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg\">Upgrade your subscription</CardTitle>\n        <CardDescription className=\"text-balance\">\n          You are currently on the free plan. Upgrade to the pro plan to get\n          access to all features.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex flex-col gap-6\">\n          <div className=\"flex flex-col gap-3 md:flex-row\">\n            <div className=\"flex flex-1 flex-col gap-2\">\n              <Label htmlFor=\"name\">Name</Label>\n              <Input id=\"name\" placeholder=\"Evil Rabbit\" />\n            </div>\n            <div className=\"flex flex-1 flex-col gap-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input id=\"email\" placeholder=\"example@acme.com\" />\n            </div>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            <Label htmlFor=\"card-number\">Card Number</Label>\n            <div className=\"grid grid-cols-2 gap-3 md:grid-cols-[1fr_80px_60px]\">\n              <Input\n                id=\"card-number\"\n                placeholder=\"1234 1234 1234 1234\"\n                className=\"col-span-2 md:col-span-1\"\n              />\n              <Input id=\"card-number-expiry\" placeholder=\"MM/YY\" />\n              <Input id=\"card-number-cvc\" placeholder=\"CVC\" />\n            </div>\n          </div>\n          <fieldset className=\"flex flex-col gap-3\">\n            <legend className=\"text-sm font-medium\">Plan</legend>\n            <p className=\"text-muted-foreground text-sm\">\n              Select the plan that best fits your needs.\n            </p>\n            <RadioGroup\n              defaultValue=\"starter\"\n              className=\"grid gap-3 md:grid-cols-2\"\n            >\n              {plans.map((plan) => (\n                <Label\n                  className=\"has-[[data-state=checked]]:border-ring has-[[data-state=checked]]:bg-input/20 flex items-start gap-3 rounded-lg border p-3\"\n                  key={plan.id}\n                >\n                  <RadioGroupItem\n                    value={plan.id}\n                    id={plan.name}\n                    className=\"data-[state=checked]:border-primary\"\n                  />\n                  <div className=\"grid gap-1 font-normal\">\n                    <div className=\"font-medium\">{plan.name}</div>\n                    <div className=\"text-muted-foreground text-xs leading-snug text-balance\">\n                      {plan.description}\n                    </div>\n                  </div>\n                </Label>\n              ))}\n            </RadioGroup>\n          </fieldset>\n          <div className=\"flex flex-col gap-2\">\n            <Label htmlFor=\"notes\">Notes</Label>\n            <Textarea id=\"notes\" placeholder=\"Enter notes\" />\n          </div>\n          <div className=\"flex flex-col gap-3\">\n            <div className=\"flex items-center gap-2\">\n              <Checkbox id=\"terms\" />\n              <Label htmlFor=\"terms\" className=\"font-normal\">\n                I agree to the terms and conditions\n              </Label>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Checkbox id=\"newsletter\" defaultChecked />\n              <Label htmlFor=\"newsletter\" className=\"font-normal\">\n                Allow us to send you emails\n              </Label>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"outline\" size=\"sm\">\n          Cancel\n        </Button>\n        <Button size=\"sm\">Upgrade Plan</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/forms.tsx"
    },
    {
      "path": "registry/default/blocks/demo/payment-method.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport { RadioGroup, RadioGroupItem } from \"@/registry/default/ui/radio-group\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\n\nconst plans = [\n  {\n    id: \"starter\",\n    name: \"Starter Plan\",\n    description: \"Perfect for small businesses.\",\n    price: \"$10\",\n  },\n  {\n    id: \"pro\",\n    name: \"Pro Plan\",\n    description: \"Advanced features with more storage.\",\n    price: \"$20\",\n  },\n] as const\n\nexport function CardsPaymentMethod() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Payment Method</CardTitle>\n        <CardDescription>\n          Add a new payment method to your account.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex flex-col gap-6\">\n        <div className=\"flex flex-col gap-3\">\n          <Label htmlFor=\"name\">Name</Label>\n          <Input id=\"name\" placeholder=\"First Last\" />\n        </div>\n        <fieldset className=\"flex flex-col gap-3\">\n          <legend className=\"text-sm font-medium\">Plan</legend>\n          <p className=\"text-muted-foreground text-sm\">\n            Select the plan that best fits your needs.\n          </p>\n          <RadioGroup defaultValue=\"starter\" className=\"grid gap-3\">\n            {plans.map((plan) => (\n              <Label\n                className=\"has-[[data-state=checked]]:border-ring has-[[data-state=checked]]:bg-primary/5 flex items-start gap-3 rounded-lg border p-3\"\n                key={plan.id}\n              >\n                <RadioGroupItem\n                  value={plan.id}\n                  id={plan.name}\n                  className=\"data-[state=checked]:border-primary\"\n                />\n                <div className=\"grid gap-1 font-normal\">\n                  <div className=\"font-medium\">{plan.name}</div>\n                  <div className=\"text-muted-foreground pr-2 text-xs leading-snug text-balance\">\n                    {plan.description}\n                  </div>\n                </div>\n              </Label>\n            ))}\n          </RadioGroup>\n        </fieldset>\n        <div className=\"flex flex-col gap-3\">\n          <Label htmlFor=\"number\">Card number</Label>\n          <Input id=\"number\" placeholder=\"\" />\n        </div>\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div className=\"flex flex-col gap-3\">\n            <Label htmlFor=\"month\">Expires</Label>\n            <Select>\n              <SelectTrigger id=\"month\" aria-label=\"Month\" className=\"w-full\">\n                <SelectValue placeholder=\"Month\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"1\">January</SelectItem>\n                <SelectItem value=\"2\">February</SelectItem>\n                <SelectItem value=\"3\">March</SelectItem>\n                <SelectItem value=\"4\">April</SelectItem>\n                <SelectItem value=\"5\">May</SelectItem>\n                <SelectItem value=\"6\">June</SelectItem>\n                <SelectItem value=\"7\">July</SelectItem>\n                <SelectItem value=\"8\">August</SelectItem>\n                <SelectItem value=\"9\">September</SelectItem>\n                <SelectItem value=\"10\">October</SelectItem>\n                <SelectItem value=\"11\">November</SelectItem>\n                <SelectItem value=\"12\">December</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"flex flex-col gap-3\">\n            <Label htmlFor=\"year\">Year</Label>\n            <Select>\n              <SelectTrigger id=\"year\" aria-label=\"Year\" className=\"w-full\">\n                <SelectValue placeholder=\"Year\" />\n              </SelectTrigger>\n              <SelectContent>\n                {Array.from({ length: 10 }, (_, i) => (\n                  <SelectItem key={i} value={`${new Date().getFullYear() + i}`}>\n                    {new Date().getFullYear() + i}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"flex flex-col gap-3\">\n            <Label htmlFor=\"cvc\">CVC</Label>\n            <Input id=\"cvc\" placeholder=\"CVC\" />\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"w-full\">Continue</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/payment-method.tsx"
    },
    {
      "path": "registry/default/blocks/demo/payments.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\"\nimport { MoreHorizontalIcon } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\"\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/registry/default/ui/table\"\n\nconst data: Payment[] = [\n  {\n    id: \"m5gr84i9\",\n    amount: 316,\n    status: \"success\",\n    email: \"ken99@example.com\",\n  },\n  {\n    id: \"3u1reuv4\",\n    amount: 242,\n    status: \"success\",\n    email: \"Abe45@example.com\",\n  },\n  {\n    id: \"derv1ws0\",\n    amount: 837,\n    status: \"processing\",\n    email: \"Monserrat44@example.com\",\n  },\n  {\n    id: \"bhqecj4p\",\n    amount: 721,\n    status: \"failed\",\n    email: \"carmella@example.com\",\n  },\n  {\n    id: \"k9f2m3n4\",\n    amount: 450,\n    status: \"pending\",\n    email: \"jason78@example.com\",\n  },\n  {\n    id: \"p5q6r7s8\",\n    amount: 1280,\n    status: \"success\",\n    email: \"sarah23@example.com\",\n  },\n]\n\nexport type Payment = {\n  id: string\n  amount: number\n  status: \"pending\" | \"processing\" | \"success\" | \"failed\"\n  email: string\n}\n\nexport const columns: ColumnDef<Payment>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => (\n      <div className=\"capitalize\">{row.getValue(\"status\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"email\",\n    header: \"Email\",\n    cell: ({ row }) => <div className=\"lowercase\">{row.getValue(\"email\")}</div>,\n  },\n  {\n    accessorKey: \"amount\",\n    header: () => <div className=\"text-right\">Amount</div>,\n    cell: ({ row }) => {\n      const amount = parseFloat(row.getValue(\"amount\"))\n\n      // Format the amount as a dollar amount\n      const formatted = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(amount)\n\n      return <div className=\"text-right font-medium\">{formatted}</div>\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const payment = row.original\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"size-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontalIcon />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem\n              onClick={() => navigator.clipboard.writeText(payment.id)}\n            >\n              Copy payment ID\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>View customer</DropdownMenuItem>\n            <DropdownMenuItem>View payment details</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      )\n    },\n  },\n]\n\nexport function CardsPayments() {\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  )\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({})\n  const [rowSelection, setRowSelection] = React.useState({})\n\n  const table = useReactTable({\n    data,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  })\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-xl\">Payments</CardTitle>\n        <CardDescription>Manage your payments.</CardDescription>\n        <CardAction>\n          <Button variant=\"secondary\" size=\"sm\" className=\"shadow-none\">\n            Add Payment\n          </Button>\n        </CardAction>\n      </CardHeader>\n      <CardContent className=\"flex flex-col gap-4\">\n        <div className=\"rounded-md border\">\n          <Table>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => {\n                    return (\n                      <TableHead\n                        key={header.id}\n                        className=\"data-[name=actions]:w-10 data-[name=amount]:w-24 data-[name=select]:w-10 data-[name=status]:w-24 [&:has([role=checkbox])]:pl-3\"\n                        data-name={header.id}\n                      >\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext()\n                            )}\n                      </TableHead>\n                    )\n                  })}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && \"selected\"}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell\n                        key={cell.id}\n                        className=\"data-[name=actions]:w-10 data-[name=amount]:w-24 data-[name=select]:w-10 data-[name=status]:w-24 [&:has([role=checkbox])]:pl-3\"\n                        data-name={cell.column.id}\n                      >\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    colSpan={columns.length}\n                    className=\"h-24 text-center\"\n                  >\n                    No results.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <div className=\"flex items-center justify-end gap-2\">\n          <div className=\"text-muted-foreground flex-1 text-sm\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.previousPage()}\n              disabled={!table.getCanPreviousPage()}\n            >\n              Previous\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.nextPage()}\n              disabled={!table.getCanNextPage()}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/payments.tsx"
    },
    {
      "path": "registry/default/blocks/demo/report-issue.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\nimport { Textarea } from \"@/registry/default/ui/textarea\"\n\nexport function CardsReportIssue() {\n  const id = React.useId()\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Report an issue</CardTitle>\n        <CardDescription>\n          What area are you having problems with?\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex flex-col gap-6\">\n        <div className=\"grid gap-4 sm:grid-cols-2\">\n          <div className=\"flex flex-col gap-3\">\n            <Label htmlFor={`area-${id}`}>Area</Label>\n            <Select defaultValue=\"billing\">\n              <SelectTrigger\n                id={`area-${id}`}\n                aria-label=\"Area\"\n                className=\"w-full\"\n              >\n                <SelectValue placeholder=\"Select\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"team\">Team</SelectItem>\n                <SelectItem value=\"billing\">Billing</SelectItem>\n                <SelectItem value=\"account\">Account</SelectItem>\n                <SelectItem value=\"deployments\">Deployments</SelectItem>\n                <SelectItem value=\"support\">Support</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"flex flex-col gap-3\">\n            <Label htmlFor={`security-level-${id}`}>Security Level</Label>\n            <Select defaultValue=\"2\">\n              <SelectTrigger\n                id={`security-level-${id}`}\n                className=\"w-full [&_span]:!block [&_span]:truncate\"\n                aria-label=\"Security Level\"\n              >\n                <SelectValue placeholder=\"Select level\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"1\">Severity 1 (Highest)</SelectItem>\n                <SelectItem value=\"2\">Severity 2</SelectItem>\n                <SelectItem value=\"3\">Severity 3</SelectItem>\n                <SelectItem value=\"4\">Severity 4 (Lowest)</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-3\">\n          <Label htmlFor={`subject-${id}`}>Subject</Label>\n          <Input id={`subject-${id}`} placeholder=\"I need help with...\" />\n        </div>\n        <div className=\"flex flex-col gap-3\">\n          <Label htmlFor={`description-${id}`}>Description</Label>\n          <Textarea\n            id={`description-${id}`}\n            placeholder=\"Please include all information relevant to your issue.\"\n            className=\"min-h-28\"\n          />\n        </div>\n      </CardContent>\n      <CardFooter className=\"justify-end gap-2\">\n        <Button variant=\"ghost\" size=\"sm\">\n          Cancel\n        </Button>\n        <Button size=\"sm\">Submit</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/report-issue.tsx"
    },
    {
      "path": "registry/default/blocks/demo/share.tsx",
      "content": "\"use client\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/default/ui/avatar\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\nimport { Separator } from \"@/registry/default/ui/separator\"\n\nconst people = [\n  {\n    name: \"Olivia Martin\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/03.png\",\n  },\n  {\n    name: \"Isabella Nguyen\",\n    email: \"b@example.com\",\n    avatar: \"/avatars/04.png\",\n  },\n  {\n    name: \"Sofia Davis\",\n    email: \"p@example.com\",\n    avatar: \"/avatars/05.png\",\n  },\n  {\n    name: \"Ethan Thompson\",\n    email: \"e@example.com\",\n    avatar: \"/avatars/01.png\",\n  },\n]\nexport function CardsShare() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Share this document</CardTitle>\n        <CardDescription>\n          Anyone with the link can view this document.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center gap-2\">\n          <Label htmlFor=\"link\" className=\"sr-only\">\n            Link\n          </Label>\n          <Input\n            id=\"link\"\n            value=\"http://example.com/link/to/document\"\n            className=\"h-8\"\n            readOnly\n          />\n          <Button size=\"sm\" variant=\"outline\" className=\"shadow-none\">\n            Copy Link\n          </Button>\n        </div>\n        <Separator className=\"my-4\" />\n        <div className=\"flex flex-col gap-4\">\n          <div className=\"text-sm font-medium\">People with access</div>\n          <div className=\"grid gap-6\">\n            {people.map((person) => (\n              <div\n                key={person.email}\n                className=\"flex items-center justify-between gap-4\"\n              >\n                <div className=\"flex items-center gap-4\">\n                  <Avatar>\n                    <AvatarImage src={person.avatar} alt=\"Image\" />\n                    <AvatarFallback>{person.name.charAt(0)}</AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <p className=\"text-sm leading-none font-medium\">\n                      {person.name}\n                    </p>\n                    <p className=\"text-muted-foreground text-sm\">\n                      {person.email}\n                    </p>\n                  </div>\n                </div>\n                <Select defaultValue=\"edit\">\n                  <SelectTrigger\n                    className=\"ml-auto pr-2\"\n                    aria-label=\"Edit\"\n                    size=\"sm\"\n                  >\n                    <SelectValue placeholder=\"Select\" />\n                  </SelectTrigger>\n                  <SelectContent align=\"end\">\n                    <SelectItem value=\"edit\">Can edit</SelectItem>\n                    <SelectItem value=\"view\">Can view</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            ))}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/share.tsx"
    },
    {
      "path": "registry/default/blocks/demo/stats.tsx",
      "content": "\"use client\"\n\nimport { Area, AreaChart, Line, LineChart } from \"recharts\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { ChartConfig, ChartContainer } from \"@/registry/default/ui/chart\"\n\nconst data = [\n  {\n    revenue: 10400,\n    subscription: 40,\n  },\n  {\n    revenue: 14405,\n    subscription: 90,\n  },\n  {\n    revenue: 9400,\n    subscription: 200,\n  },\n  {\n    revenue: 8200,\n    subscription: 278,\n  },\n  {\n    revenue: 7000,\n    subscription: 89,\n  },\n  {\n    revenue: 9600,\n    subscription: 239,\n  },\n  {\n    revenue: 11244,\n    subscription: 78,\n  },\n  {\n    revenue: 26475,\n    subscription: 89,\n  },\n]\n\nconst chartConfig = {\n  revenue: {\n    label: \"Revenue\",\n    color: \"var(--primary)\",\n  },\n  subscription: {\n    label: \"Subscriptions\",\n    color: \"var(--primary)\",\n  },\n} satisfies ChartConfig\n\nexport function CardsStats() {\n  return (\n    <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-1 xl:grid-cols-2\">\n      <Card>\n        <CardHeader>\n          <CardDescription>Total Revenue</CardDescription>\n          <CardTitle className=\"text-3xl\">$15,231.89</CardTitle>\n          <CardDescription>+20.1% from last month</CardDescription>\n        </CardHeader>\n        <CardContent className=\"pb-0\">\n          <ChartContainer config={chartConfig} className=\"h-[80px] w-full\">\n            <LineChart\n              data={data}\n              margin={{\n                top: 5,\n                right: 10,\n                left: 10,\n                bottom: 0,\n              }}\n            >\n              <Line\n                type=\"monotone\"\n                strokeWidth={2}\n                dataKey=\"revenue\"\n                stroke=\"var(--color-revenue)\"\n                activeDot={{\n                  r: 6,\n                }}\n              />\n            </LineChart>\n          </ChartContainer>\n        </CardContent>\n      </Card>\n      <Card className=\"pb-0 lg:hidden xl:flex\">\n        <CardHeader>\n          <CardDescription>Subscriptions</CardDescription>\n          <CardTitle className=\"text-3xl\">+2,350</CardTitle>\n          <CardDescription>+180.1% from last month</CardDescription>\n          <CardAction>\n            <Button variant=\"ghost\" size=\"sm\">\n              View More\n            </Button>\n          </CardAction>\n        </CardHeader>\n        <CardContent className=\"mt-auto max-h-[124px] flex-1 p-0\">\n          <ChartContainer config={chartConfig} className=\"size-full\">\n            <AreaChart\n              data={data}\n              margin={{\n                left: 0,\n                right: 0,\n              }}\n            >\n              <Area\n                dataKey=\"subscription\"\n                fill=\"var(--color-subscription)\"\n                fillOpacity={0.05}\n                stroke=\"var(--color-subscription)\"\n                strokeWidth={2}\n                type=\"monotone\"\n              />\n            </AreaChart>\n          </ChartContainer>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/stats.tsx"
    },
    {
      "path": "registry/default/blocks/demo/team-members.tsx",
      "content": "\"use client\"\n\nimport { ChevronDown } from \"lucide-react\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/default/ui/avatar\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/registry/default/ui/command\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nconst teamMembers = [\n  {\n    name: \"Sofia Davis\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/01.png\",\n    role: \"Owner\",\n  },\n  {\n    name: \"Jackson Lee\",\n    email: \"p@example.com\",\n    avatar: \"/avatars/02.png\",\n    role: \"Developer\",\n  },\n  {\n    name: \"Isabella Nguyen\",\n    email: \"i@example.com\",\n    avatar: \"/avatars/03.png\",\n    role: \"Billing\",\n  },\n]\n\nconst roles = [\n  {\n    name: \"Viewer\",\n    description: \"Can view and comment.\",\n  },\n  {\n    name: \"Developer\",\n    description: \"Can view, comment and edit.\",\n  },\n  {\n    name: \"Billing\",\n    description: \"Can view, comment and manage billing.\",\n  },\n  {\n    name: \"Owner\",\n    description: \"Admin-level access to all resources.\",\n  },\n]\n\nexport function CardsTeamMembers() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Team Members</CardTitle>\n        <CardDescription>\n          Invite your team members to collaborate.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"grid gap-6\">\n        {teamMembers.map((member) => (\n          <div\n            key={member.name}\n            className=\"flex items-center justify-between gap-4\"\n          >\n            <div className=\"flex items-center gap-4\">\n              <Avatar className=\"border\">\n                <AvatarImage src={member.avatar} alt=\"Image\" />\n                <AvatarFallback>{member.name.charAt(0)}</AvatarFallback>\n              </Avatar>\n              <div className=\"flex flex-col gap-0.5\">\n                <p className=\"text-sm leading-none font-medium\">\n                  {member.name}\n                </p>\n                <p className=\"text-muted-foreground text-xs\">{member.email}</p>\n              </div>\n            </div>\n            <Popover>\n              <PopoverTrigger asChild>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"ml-auto shadow-none\"\n                >\n                  {member.role} <ChevronDown />\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"p-0\" align=\"end\">\n                <Command>\n                  <CommandInput placeholder=\"Select role...\" />\n                  <CommandList>\n                    <CommandEmpty>No roles found.</CommandEmpty>\n                    <CommandGroup>\n                      {roles.map((role) => (\n                        <CommandItem key={role.name}>\n                          <div className=\"flex flex-col\">\n                            <p className=\"text-sm font-medium\">{role.name}</p>\n                            <p className=\"text-muted-foreground\">\n                              {role.description}\n                            </p>\n                          </div>\n                        </CommandItem>\n                      ))}\n                    </CommandGroup>\n                  </CommandList>\n                </Command>\n              </PopoverContent>\n            </Popover>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/demo/team-members.tsx"
    }
  ],
  "categories": [
    "page-layout"
  ]
}